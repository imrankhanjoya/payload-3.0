/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    influencers: Influencer;
    handlers: Handler;
    achivements: Achivement;
    experiences: Experience;
    infuencerbrands: Infuencerbrand;
    engagements: Engagement;
    socialmedia: Socialmedia;
    participants: Participant;
    brands: Brand;
    campaigns: Campaign;
    'approval-request': ApprovalRequest;
    users: User;
    pages: Page;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "influencers".
 */
export interface Influencer {
  id: string;
  name: string;
  userid: string;
  bio?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  website?: string | null;
  experiance?: number | null;
  industry?:
    | (
        | 'Fashion and Beauty'
        | 'Travel and Hospitality'
        | 'Technology and Gadgets'
        | 'Health and Fitness'
        | 'Food and Beverage'
        | 'Finance and Investment'
        | 'Entertainment'
        | 'Gaming'
      )[]
    | null;
  country?: ('IN' | 'ID' | 'TH' | 'SG') | null;
  state?: string | null;
  publish?: boolean | null;
  turnaroundtime?: string | null;
  image?: (string | null) | Media;
  infuencer?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  title: string;
  description?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  oniontoken?: string | null;
  role: 'admin' | 'editor' | 'influencer';
  phone?: string | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "handlers".
 */
export interface Handler {
  id: string;
  title: string;
  site: 'facebook' | 'twitter' | 'instagram' | 'tiktok';
  url?: string | null;
  createdBy?: (string | null) | User;
  infuencer?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "achivements".
 */
export interface Achivement {
  id: string;
  title: string;
  date?: string | null;
  description: string;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences".
 */
export interface Experience {
  id: string;
  title: string;
  date?: string | null;
  description: string;
  url?: string | null;
  infuencer?: (string | null) | User;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "infuencerbrands".
 */
export interface Infuencerbrand {
  id: string;
  title: string;
  url?: string | null;
  description: string;
  brandlogo?: (string | null) | Media;
  infuencer?: (string | null) | User;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "engagements".
 */
export interface Engagement {
  id: string;
  detail: string;
  screen?: (string | null) | Media;
  infuencer?: (string | null) | User;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socialmedia".
 */
export interface Socialmedia {
  id: string;
  title?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "participants".
 */
export interface Participant {
  id: string;
  username?: string | null;
  userbio?: string | null;
  campaignId?: string | null;
  userId?: string | null;
  status?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: string;
  title?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  brandlogo?: (string | null) | Media;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns".
 */
export interface Campaign {
  id: string;
  title: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  country: 'IN' | 'ID' | 'TH' | 'SG';
  state?: string | null;
  agerange: '18-20' | '21-30' | '31-40' | '41-50' | '51-60' | '60+';
  gender: 'Male' | 'Female' | 'Both';
  startdate?: string | null;
  enddate?: string | null;
  campaignImage1?: (string | null) | Media;
  campaignImage2?: (string | null) | Media;
  campaignImage3?: (string | null) | Media;
  createdBy?: (string | null) | User;
  brand?: (string | null) | Brand;
  socialmedia?: (string | null) | Socialmedia;
  budget?: number | null;
  rate: 'commission' | 'perpost' | 'discount';
  ratevalue?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "approval-request".
 */
export interface ApprovalRequest {
  id: string;
  username?: string | null;
  userbio?: string | null;
  campaignId?: string | null;
  userId?: string | null;
  status?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'influencers';
        value: string | Influencer;
      } | null)
    | ({
        relationTo: 'handlers';
        value: string | Handler;
      } | null)
    | ({
        relationTo: 'achivements';
        value: string | Achivement;
      } | null)
    | ({
        relationTo: 'experiences';
        value: string | Experience;
      } | null)
    | ({
        relationTo: 'infuencerbrands';
        value: string | Infuencerbrand;
      } | null)
    | ({
        relationTo: 'engagements';
        value: string | Engagement;
      } | null)
    | ({
        relationTo: 'socialmedia';
        value: string | Socialmedia;
      } | null)
    | ({
        relationTo: 'participants';
        value: string | Participant;
      } | null)
    | ({
        relationTo: 'brands';
        value: string | Brand;
      } | null)
    | ({
        relationTo: 'campaigns';
        value: string | Campaign;
      } | null)
    | ({
        relationTo: 'approval-request';
        value: string | ApprovalRequest;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  _lastEdited: {
    user: {
      relationTo: 'users';
      value: string | User;
    };
    editedAt?: string | null;
  };
  isLocked?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}